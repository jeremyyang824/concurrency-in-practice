1.1 启动redis-server
	redis-server 可运行时修改配置
	eg: config set slowlog-log-slower-than 100000
	config rewrite
1.2 运行redis-cli的两种方式
	交互式，命令方式
1.3 Redis单线程架构
	发送命令、执行命令、返回结果
	所有命令都会进入队列，然后逐个执行
	Pipeline P85 目标及原理，注意非原子，最佳实践适当分批次
1.4 事务与Lua
	事务 watch + multi + exec/discard
	Lua	eval/evalsha	(原子的)

2. Redis数据结构与操作命令
2.1 全局命令
	keys *（使用scan代替）
	dbsize
	exists keys
	del key
	expire key seconds
	ttl key
	type key
	object encoding key #内部编码（内部编码与表现结构解耦）
2.2 基本数据结构
	string, hash(大对象), list（阻塞队列）, set（集合运算）,zset（优先队列）
2.3 pub/sub

3. 深入协议
3.1 Redis序列化协议RESP
	请求格式
	响应状态码（+, -, :, $数字, *数字）
	
4. 运维及分析
4.0 redis-cli--stat #查看每秒请求处理数量
	redis-cli --bigkeys #查看大对象
4.1 slow log
	阈值？slowlog-log-slower-than(单位微秒，默认10000，即10ms)
	存放在哪？列表存储, slowlog-max-len即列表长度，自动淘汰最早记录
	slowlog get n
	slowlog len
	slowlog reset
4.2 monitor命令 （危险）

4.3 服务端统计信息info
	内存篇P201	mem_fragmentation_ratio	= used_memory_rss / used_memory
	内存溢出策略 P207

4.4 客户端
	client list #列出当前所有客户端连接
	输入缓冲区(每个客户端，最大1G) qbuf, qbuf-free。输入缓冲区不受maxmemory控制！
	输出缓冲区(每个客户端，3类：normal, slave, pubsub)P136
	客户端限制 maxclients 和 timeout

5. 持久化
	RDB	save/bgsave	(save m n) (关闭 save "")
	AOF（appendonly yes/no）(策略： appendfsync no/always/everysec)
	AOF重写(手工bgrewriteaof，自动auto-aof-rewrite-min-size, auto-aof-rewrite-precentage)P159

6. 复制与哨兵

7. 集器